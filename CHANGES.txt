This file contains differences between our api and the FRED specs minus the geo
queries which ofcourse are not part of the FRED spec altogether 

Facility Add:

    Currently wipes the following fields from the post:

    var badKeys = [
                '_id',
                'uuid',
                'url',
                'createdAt',
                'id',
                'href',
                '__v',
                'updatedAt'
               ];

    uuid however is saved and turned into an objectID internally. 
    The user however will not see this, in the end if they post a valid uuid,
    they will see their uuid in the response. uuid MUST be a 24 char hex or a 12
    byte string.

    It also requires you to provide a sector and a name for the facility.

    FRED allows id to be passed in (in any format to either id/uuid not sure)
    FRED does not reject any field
    FRED implies name is required but does not enforce it.
    FRED does not enforce sector.


Facility Update:

    Currently wipes the following fields from the request:

    var badKeys = [
                '_id',
                'uuid',
                'url',
                'createdAt',
                'id',
                'href',
                '__v',
                'updatedAt'
               ];

    FRED does not allow "id" "createdAt" and "updatedAt"

    Theres no reason to allow for updating id/uuid.

Facilities GET:

    Like FRED we respond with a facility object however we do not allow for
    limit = off to actually be off. limit = off is now limit = 1000.

    To give the user some idea of how many results there in the db the following
    three fields were added to the faciliies json reply:

        - total: total #results in db for this query
        - length: current number returned
        - offset: current offset in total available   

    FRED does none of this, instead provides limit=off to actually return
    everything.

    TODO: Jon update this with pagination details!

Facility Bulk:

    We provide a way to do bulk uploads from a file (and as a json array but
    that endpoint is currently not exposed)

    It takes in a facility object like the one outputed by the main get
    endpoint. 

    It does validation against the site model and does not do the validation
    that update/add do. I.e you can provide all the fields in the badkey list
    but you cannot omit required fields (sector and name). This makes sense
    since fields like createdAt are probably useful to keep around in this case.

    _id is removed, just incase.

    However if you provide a uuid, like add this field is saved as _id and shows
    in the response as a uuid. It once again expects the format to be a 24 char
    string.


    Bulk endpoint never 404/400's unless something major happened. A report is
    sent as a response explaining what was and wasnt inserted. Add ?debug to get
    a detailed error report if needed.


Facility GET:
    
    Three new query paramters were added. hist, rollback and revert.
    They return history, updated the facility with a previous version and revert
    to a previous facility respectively. 

    If model is inserted outside of the api OR through the bulk upload enpoint
    version 0 is not recorded. Version 0 is created on update to the model (so
    version 0 == first update in this case) or through any of the three hist
    queries (Version 0 === actual version 0 in this case, generated on the fly)

